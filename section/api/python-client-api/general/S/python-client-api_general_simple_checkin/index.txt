simple_checkin
--------------

*simple_checkin( search_key, context, file_path, snapshot_type="file", description="No description", use_handoff_dir=False, file_type="main", is_current=True, level_key=None, breadcrumb=False, metadata={}, mode=None, is_revision=False, info={}, keep_file_name=False, create_icon=True, checkin_cls='pyasm.checkin.FileCheckin', context_index_padding=None, checkin_type="strict", source_path=None, version=None )*



Simple method that checks in a file.

*param:*

*search_key* - a unique identifier key representing an sobject

*context* - the context of the checkin

*file_path* - path of the file that was previously uploaded



*keyparam:*

*snapshot_type* - [optional] descibes what kind of a snapshot this is.

More information about a snapshot type can be found in the

prod/snapshot_type sobject

*description* - [optional] optional description for this checkin

*file_type* - [optional] optional description for this file_type

*is_current* - flag to determine if this checkin is to be set as current

*level_key* - the unique identifier of the level that this

is to be checked into

*breadcrumb* - flag to leave a .snapshot breadcrumb file containing

information about what happened to a checked in file

*metadata* - a dictionary of values that will be stored as metadata

on the snapshot

*mode* - inplace, upload, copy, move

*is_revision* - flag to set this as a revision instead of a version

*create_icon* - flag to create an icon on checkin

*info* - dict of info to pass to the ApiClientCmd

*keep_file_name* - keep the original file name

*checkin_cls* - checkin class

*context_index_padding* - determines the padding used for context

indexing: ie: design/0001

*checkin_type* - auto or strict which controls whether to auto create versionless

*source_path* - explicitly give the source path

*version* - force a version for this check-in



*return:*

*dictionary* - representation of the snapshot created for this checkin
